{"version":3,"sources":["student.jsx","App.js","serviceWorker.js","index.js"],"names":["Student","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","average","collapsed","tag","tags","getAverage","bind","assertThisInitialized","handleClick","handleInput","handleSubmit","fetchTags","setState","grades","student","sum","i","length","parseInt","e","currentTarget","value","preventDefault","name","concat","id","sessionStorage","getItem","setItem","console","log","document","querySelectorAll","forEach","el","trim","split","expand","react_default","a","createElement","onClick","className","collapse","scores","map","grade","key","onSubmit","type","onChange","placeholder","src","pic","alt","firstName","toUpperCase","lastName","email","company","skill","React","Component","App","rawData","filteredData","nameFilteredData","tagFilteredData","filtered","nameQuery","tagQuery","finalFilteredData","fetchRawData","_this2","fetch","then","res","json","data","students","_this3","classList","toLowerCase","filter","indexOf","getElementById","includes","href","target","rel","src_student","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ba41557.chunk.js","sourcesContent":["import React from 'react';\n\nclass Student extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      average: null,\n      collapsed: true,\n      tag: \"\",\n      tags: []\n    };\n\n    this.getAverage = this.getAverage.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchTags = this.fetchTags.bind(this);\n\n  }\n\n  componentDidMount(){\n    this.setState({ average: this.getAverage() + \"%\"});\n    this.fetchTags();\n  }\n\n  getAverage(){\n    let grades = this.props.student.grades;\n    let sum = 0;\n\n    for (let i = 0; i < grades.length; i++){\n      sum += parseInt(grades[i]);\n    }\n\n    return sum / grades.length;\n  }\n\n  handleClick(){\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  handleInput(e){\n    this.setState({tag: e.currentTarget.value});\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    let tag = this.state.tag;\n    let name = `tags${this.props.student.id}`;\n    if (!sessionStorage.getItem(name)) sessionStorage.setItem(name, \"\");\n    if (sessionStorage.getItem(name) === \"\"){\n      sessionStorage.setItem(name, sessionStorage.getItem(name).concat(`${tag}`));\n    } else{\n      sessionStorage.setItem(name, sessionStorage.getItem(name).concat(` ${tag}`));\n    } \n    console.log(document.querySelectorAll(\".tag-field\"));\n    document.querySelectorAll(\".tag-field\").forEach(el => {\n      return el.value = \"\";\n    });\n    this.fetchTags();\n  }\n\n  fetchTags(){\n    let name = `tags${this.props.student.id}`;\n    let tagString;\n    if (sessionStorage.getItem(name) === null){\n      tagString = \"\";\n    } else{\n      tagString = sessionStorage.getItem(name).trim();\n    }\n    let tags = tagString.split(\" \");\n    if (tags[0] === \"\") tags = [];\n    this.setState({tags: tags});\n  }\n\n  render(){\n    let expand = (\n      <button onClick={this.handleClick} className=\"button\">\n        +\n      </button>\n    )\n\n    let collapse = (\n      <button onClick={this.handleClick} className=\"button\">\n        -\n      </button>\n    )\n\n    let scores = (\n      <div className=\"scores\">\n        {this.props.student.grades.map((grade, i) => {\n          return (\n            <li className=\"grades\" key={i}>\n              <div className=\"test-score\">\n                <div>Test {i + 1}:</div>\n                 <div className=\"grade\">{grade}%</div>\n              </div>\n            </li>\n          )\n        })}\n\n        <div className=\"tags\">\n          {this.state.tags.map(tag => {\n            return(\n              <div className=\"tag\">\n                {tag}\n              </div>\n            )\n          })}\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" onChange={this.handleInput} className=\"tag-field\" placeholder=\"Add a tag\"/>\n        </form>\n\n      </div>\n    )\n\n\n    return(\n\n      <li className=\"student\" key={this.props.student.id}> \n          <img src={this.props.student.pic} alt=\"pic\" className=\"pic\" />\n          <div className=\"student-info\">\n            <div className=\"top\">\n              <h3 className=\"name\">\n              {this.props.student.firstName.toUpperCase()} {this.props.student.lastName.toUpperCase()}\n              </h3>\n              {this.state.collapsed && expand}\n              {!this.state.collapsed && collapse}\n            </div>\n            <div className=\"info\">\n              <div className=\"info-line\">Email: {this.props.student.email}</div>\n              <div className=\"info-line\">Company: {this.props.student.company}</div>\n              <div className=\"info-line\">Skill: {this.props.student.skill}</div>\n              <div className=\"info-line\">Average: {this.state.average}</div>\n\n              {!this.state.collapsed && scores}\n              \n            </div>\n          </div>\n          \n      </li>\n    )\n  }\n}\n\nexport default Student;","import React from 'react';\nimport './App.css';\nimport Student from './student';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      rawData: [],\n      filteredData: [],\n      nameFilteredData: [],\n      tagFilteredData: [],\n      filtered: false,\n      nameQuery: \"\",\n      tagQuery: \"\"\n    };\n    this.nameFilteredData = [];\n    this.tagFilteredData = [];\n    this.finalFilteredData = [];\n    this.fetchRawData = this.fetchRawData.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n\n  }\n\n  componentDidMount(){\n   this.fetchRawData();\n  }\n\n  fetchRawData(){\n    fetch('https://my-json-server.typicode.com/ndo277/studentdb/db')\n      .then(res => res.json())\n      .then(data => this.setState({ rawData: data.students }));\n  }\n\n  handleInput(e){\n    if (e.currentTarget.classList[0] === \"name-search-field\"){\n      this.setState({ nameQuery: e.currentTarget.value });\n      let nameFilteredData = this.state.rawData;\n      let nameQuery = e.currentTarget.value.toLowerCase();\n      nameFilteredData = nameFilteredData.filter(student => {\n        let fullName = student.firstName.toLowerCase() + student.lastName.toLowerCase();\n        return (\n          fullName.indexOf(nameQuery) !== -1\n        );\n      });\n      this.nameFilteredData = nameFilteredData;\n    }\n\n    if (e.currentTarget.classList[0] === \"tag-search-field\"){\n      this.setState({ tagQuery: e.currentTarget.value });\n      let tagFilteredData = this.state.rawData;\n      let tagQuery = e.currentTarget.value.toLowerCase();\n      tagFilteredData = tagFilteredData.filter(student => {\n        let name = `tags${student.id}`;\n        let tags = sessionStorage.getItem(name);\n        if (tags === null) tags = \"\";\n        return (\n          tags.indexOf(tagQuery) !== -1\n        );\n      });\n      this.tagFilteredData = tagFilteredData;\n    }\n\n    if (document.getElementById(\"name-search\").value === \"\"){\n      this.finalFilteredData = this.tagFilteredData;\n    } else if (document.getElementById(\"tag-search\").value === \"\") {\n      this.finalFilteredData = this.nameFilteredData;\n    } else {\n      this.finalFilteredData = this.nameFilteredData.filter(value => this.tagFilteredData.includes(value));\n    }\n    \n    this.setState({ filteredData: this.finalFilteredData, filtered: true });\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <h1 className=\"title\">STUDENTDB</h1>\n\n        <div className=\"git\"><a href=\"https://github.com/ndo277/studentdb/\" className=\"link\" target=\"_blank\" rel=\"noopener noreferrer\">[Github]</a></div>\n        \n        <div className=\"App\">\n\n          <div className=\"student-index\">\n            <div className=\"name-filter\">\n              <input type=\"text\" placeholder=\"Search by name\" className=\"name-search-field\" id=\"name-search\" onChange={this.handleInput} />\n            </div>\n\n            <div className=\"name-filter\">\n              <input type=\"text\" placeholder=\"Search by tags\" className=\"tag-search-field\" id=\"tag-search\" onChange={this.handleInput} />\n            </div>\n\n            {!this.state.filtered && this.state.rawData.map(student => {\n              return (\n                <Student student={student} key={student.id} />\n              )\n            })}\n            {this.state.filtered && this.state.filteredData.map(student => {\n              return (\n                <Student student={student} key={student.id} />\n              )\n            })}\n          </div>\n        </div>\n\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}